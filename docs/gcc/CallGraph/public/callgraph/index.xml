<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CallGraphs on GOLang GCC Introspector</title>
    <link>https://h4ck3rm1k3.github.io/gogccintro/gcc/CallGraph/public/callgraph/</link>
    <description>Recent content in CallGraphs on GOLang GCC Introspector</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 May 2017 05:26:49 -0400</lastBuildDate>
    
	<atom:link href="https://h4ck3rm1k3.github.io/gogccintro/gcc/CallGraph/public/callgraph/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TreeDump</title>
      <link>https://h4ck3rm1k3.github.io/gogccintro/gcc/CallGraph/public/callgraph/treedump/</link>
      <pubDate>Mon, 15 May 2017 05:26:49 -0400</pubDate>
      
      <guid>https://h4ck3rm1k3.github.io/gogccintro/gcc/CallGraph/public/callgraph/treedump/</guid>
      <description>Example generating a call graph from the a standard gcc .tu tree dump. Using the cayley graph tool for the query engine.
Compile with gcc and get the tu files CFLAGS=-O0 -fdump-translation-unit -save-temps CPPFLAGS=-O0 -fdump-translation-unit -save-temps CXXFLAGS=-O0 -fdump-translation-unit -save-temps  convert the tu file to a nquads ./parser -file ~/experiments/gcc-1/build/gcc/tree-dump.c.001t.tu -consumer grapht  convert to a pquads for load speed GOPATH=/home/mdupont/gocode ~/gocode/src/github.com/cayleygraph/cayley/cmd/cayley/cayley conv -i ~/experiments/gcc-1/build/gcc/tree-dump.c.001t.tu.nq -o ~/experiments/gcc-1/build/gcc/tree-dump.c.001t.tu.pq  query with cayley cat callgraph.</description>
    </item>
    
  </channel>
</rss>