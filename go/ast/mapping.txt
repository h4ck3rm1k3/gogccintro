    Objects: map[string]*ast.Object /*Map*/ {
      "SendStmt"/*kv*/: p.Ptrmap("0xc420243610"),
      "IfStmt"/*kv*/: p.Ptrmap("0xc420243640")
      "ValueSpec"/*kv*/: p.Ptrmap("0xc420243660")
      "BadExpr"/*kv*/: p.Ptrmap("0xc420243690")
      "CompositeLit"/*kv*/: p.Ptrmap("0xc4202436c0")
      "ExprStmt"/*kv*/: p.Ptrmap("0xc4202436e0")
      "BranchStmt"/*kv*/: p.Ptrmap("0xc420243710")
      "BadDecl"/*kv*/: p.Ptrmap("0xc420243740")
      "Ident"/*kv*/: p.Ptrmap("0xc420243760")
      "MapType"/*kv*/: p.Ptrmap("0xc420243790")
      "EmptyStmt"/*kv*/: p.Ptrmap("0xc4202437b0")
      "TypeSwitchStmt"/*kv*/: p.Ptrmap("0xc4202437e0")
      "SwitchStmt"/*kv*/: p.Ptrmap("0xc420243810")
      "GenDecl"/*kv*/: p.Ptrmap("0xc420243840")
      "isWhitespace"/*kv*/: p.Ptrmap("0xc420243870")
      "CallExpr"/*kv*/: p.Ptrmap("0xc420243890")
      "StructType"/*kv*/: p.Ptrmap("0xc4202438c0")
      "CaseClause"/*kv*/: p.Ptrmap("0xc4202438f0")
      "ImportSpec"/*kv*/: p.Ptrmap("0xc420243920")
      "Comment"/*kv*/: p.Ptrmap("0xc420243950")
      "SEND"/*kv*/: p.Ptrmap("0xc420243970")
      "RECV"/*kv*/: p.Ptrmap("0xc420243990")
      "SelectStmt"/*kv*/: p.Ptrmap("0xc4202439c0")
      "Stmt"/*kv*/: p.Ptrmap("0xc4202439e0")
      "IndexExpr"/*kv*/: p.Ptrmap("0xc420243a10")
      "BlockStmt"/*kv*/: p.Ptrmap("0xc420243a40")
      "GoStmt"/*kv*/: p.Ptrmap("0xc420243a60")
      "Node"/*kv*/: p.Ptrmap("0xc420243a90")
      "SliceExpr"/*kv*/: p.Ptrmap("0xc420243ab0")
      "BadStmt"/*kv*/: p.Ptrmap("0xc420243ae0")
      "DeclStmt"/*kv*/: p.Ptrmap("0xc420243b00")
      "LabeledStmt"/*kv*/: p.Ptrmap("0xc420243b30")
      "ReturnStmt"/*kv*/: p.Ptrmap("0xc420243b60")
      "stripTrailingWhitespace"/*kv*/: p.Ptrmap("0xc420243b80")
      "FieldList"/*kv*/: p.Ptrmap("0xc420243bb0")
      "BinaryExpr"/*kv*/: p.Ptrmap("0xc420243be0")
      "ChanType"/*kv*/: p.Ptrmap("0xc420243c10")
      "FuncType"/*kv*/: p.Ptrmap("0xc420243c30")
      "DeferStmt"/*kv*/: p.Ptrmap("0xc420243c60")
      "ForStmt"/*kv*/: p.Ptrmap("0xc420243c80")
      "CommClause"/*kv*/: p.Ptrmap("0xc420243cb0")
      "Spec"/*kv*/: p.Ptrmap("0xc420243cd0")
      "Decl"/*kv*/: p.Ptrmap("0xc420243d00")
      "BasicLit"/*kv*/: p.Ptrmap("0xc420243d20")
      "StarExpr"/*kv*/: p.Ptrmap("0xc420243d50")
      "Package"/*kv*/: p.Ptrmap("0xc420243d70")
      "ChanDir"/*kv*/: p.Ptrmap("0xc420243da0")
      "NewIdent"/*kv*/: p.Ptrmap("0xc420243dc0")
      "TypeSpec"/*kv*/: p.Ptrmap("0xc420243df0")
      "File"/*kv*/: p.Ptrmap("0xc420243e10")
      "Expr"/*kv*/: p.Ptrmap("0xc420243e30")
      "CommentGroup"/*kv*/: p.Ptrmap("0xc420243e60")
      "UnaryExpr"/*kv*/: p.Ptrmap("0xc420243e90")
      "KeyValueExpr"/*kv*/: p.Ptrmap("0xc420243ec0")
      "TypeAssertExpr"/*kv*/: p.Ptrmap("0xc420243ef0")
      "ArrayType"/*kv*/: p.Ptrmap("0xc420243f20")
      "Field"/*kv*/: p.Ptrmap("0xc420243f40")
      "FuncLit"/*kv*/: p.Ptrmap("0xc420243f70")
      "ParenExpr"/*kv*/: p.Ptrmap("0xc420243f90")
      "SelectorExpr"/*kv*/: p.Ptrmap("0xc420243fc0")
      "Ellipsis"/*kv*/: p.Ptrmap("0xc420243ff0")
      "AssignStmt"/*kv*/: p.Ptrmap("0xc420244020")
      "RangeStmt"/*kv*/: p.Ptrmap("0xc420244050")
      "FuncDecl"/*kv*/: p.Ptrmap("0xc420244070")
      "InterfaceType"/*kv*/: p.Ptrmap("0xc4202440a0")
      "IsExported"/*kv*/: p.Ptrmap("0xc4202440d0")
      "IncDecStmt"/*kv*/: p.Ptrmap("0xc420244100")
    }, /*hash end*/,
